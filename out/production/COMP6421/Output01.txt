id: package     at line 1
id: helpers     at line 1
semicolon: ;     at line 1
id: import     at line 2
id: javax     at line 2
dot: .     at line 2
id: swing     at line 2
dot: .     at line 2
id: JFrame     at line 2
semicolon: ;     at line 2
id: import     at line 4
id: models     at line 4
dot: .     at line 4
id: Point     at line 4
semicolon: ;     at line 4
id: import     at line 5
id: models     at line 5
dot: .     at line 5
id: TDMap     at line 5
semicolon: ;     at line 5
id: import     at line 6
id: models     at line 6
dot: .     at line 6
id: Tower     at line 6
semicolon: ;     at line 6
id: import     at line 8
id: java     at line 8
dot: .     at line 8
id: awt     at line 8
dot: .     at line 8
id: BasicStroke     at line 8
semicolon: ;     at line 8
id: import     at line 9
id: java     at line 9
dot: .     at line 9
id: awt     at line 9
dot: .     at line 9
id: Color     at line 9
semicolon: ;     at line 9
id: import     at line 10
id: java     at line 10
dot: .     at line 10
id: awt     at line 10
dot: .     at line 10
id: Graphics     at line 10
semicolon: ;     at line 10
id: import     at line 11
id: java     at line 11
dot: .     at line 11
id: awt     at line 11
dot: .     at line 11
id: Graphics2D     at line 11
semicolon: ;     at line 11
id: import     at line 12
id: java     at line 12
dot: .     at line 12
id: util     at line 12
dot: .     at line 12
id: ArrayList     at line 12
semicolon: ;     at line 12
------: /**     at line 14
------:  *  This class relates to all the UI aspects of the game play.     at line 15
------:  *       at line 16
------:  *  @author MengYao      at line 17
------:  *  @author Zhoujian Lan     at line 18
------:  *       at line 19
------:  *  @version 1.0.0     at line 20
comment:  */     at line 21
id: public     at line 22
rw_class: class     at line 22
id: Artist     at line 22
underline: _     at line 22
id: Swing     at line 22
id: extends     at line 22
id: Helper     at line 22
openCurlyBracket: {     at line 22
------: /**     at line 24
------:      *  The default pixel width for the screen.     at line 25
comment:      */     at line 26
id: public     at line 27
id: static     at line 27
id: final     at line 27
rw_int: int     at line 27
id: PIXELWIDTH     at line 27
assign: =     at line 27
num_integer: 1000     at line 27
semicolon: ;     at line 27
------: /**     at line 29
------:      *  The default pixel height for the screen.     at line 30
comment:      */     at line 31
id: public     at line 32
id: static     at line 32
id: final     at line 32
rw_int: int     at line 32
id: PIXELHEIGHT     at line 32
assign: =     at line 32
num_integer: 700     at line 32
semicolon: ;     at line 32
------: /**     at line 34
------:      *  The default height for the map shown on the screen.     at line 35
comment:      */     at line 36
id: public     at line 37
id: static     at line 37
id: final     at line 37
rw_int: int     at line 37
id: GAMEPIXELHEIGHT     at line 37
assign: =     at line 37
id: PIXELHEIGHT     at line 37
minus: -     at line 37
num_integer: 100     at line 37
semicolon: ;     at line 37
id: private     at line 38
rw_int: int     at line 38
id: gridWidth     at line 38
semicolon: ;     at line 38
id: private     at line 39
rw_int: int     at line 39
id: gridHeight     at line 39
semicolon: ;     at line 39
inlineComment: //public GameController controller = new GameController();     at line 41
id: private     at line 42
id: static     at line 42
id: Artist     at line 42
underline: _     at line 42
id: Swing     at line 42
id: artist     at line 42
assign: =     at line 42
id: new     at line 42
id: Artist     at line 42
underline: _     at line 42
id: Swing     at line 42
openPar: (     at line 42
closePar: )     at line 42
semicolon: ;     at line 42
inlineComment: //the artist needs to have a grid and height of the map. It starts by setting the defaults.     at line 44
id: private     at line 45
id: Artist     at line 45
underline: _     at line 45
id: Swing     at line 45
openPar: (     at line 45
closePar: )     at line 45
openCurlyBracket: {     at line 45
id: gridWidth     at line 46
assign: =     at line 46
id: TDMap     at line 46
dot: .     at line 46
id: DEFAULTGRIDWIDTH     at line 46
semicolon: ;     at line 46
id: gridHeight     at line 47
assign: =     at line 47
id: TDMap     at line 47
dot: .     at line 47
id: DEFAULTGRIDHEIGHT     at line 47
semicolon: ;     at line 47
closeCurlyBracket: }     at line 48
------: /**     at line 50
------:      *     at line 51
------:      * @param width     at line 52
comment:      */     at line 53
id: public     at line 54
id: void     at line 54
id: setGridWidth     at line 54
openPar: (     at line 54
rw_int: int     at line 54
id: width     at line 54
closePar: )     at line 54
openCurlyBracket: {     at line 54
id: this     at line 55
dot: .     at line 55
id: gridWidth     at line 55
assign: =     at line 55
id: width     at line 55
semicolon: ;     at line 55
closeCurlyBracket: }     at line 56
------: /**     at line 58
------:      *     at line 59
------:      * @param height     at line 60
comment:      */     at line 61
id: public     at line 62
id: void     at line 62
id: setGridHeight     at line 62
openPar: (     at line 62
rw_int: int     at line 62
id: height     at line 62
closePar: )     at line 62
openCurlyBracket: {     at line 62
id: this     at line 63
dot: .     at line 63
id: gridHeight     at line 63
assign: =     at line 63
id: height     at line 63
semicolon: ;     at line 63
closeCurlyBracket: }     at line 64
------: /**     at line 66
------:      *     at line 67
------:      * @return     at line 68
comment:      */     at line 69
id: public     at line 70
id: static     at line 70
id: Artist     at line 70
underline: _     at line 70
id: Swing     at line 70
id: getInstance     at line 70
openPar: (     at line 70
closePar: )     at line 70
openCurlyBracket: {     at line 70
rw_return: return     at line 71
id: artist     at line 71
semicolon: ;     at line 71
closeCurlyBracket: }     at line 72
------: /**     at line 74
------:      *     at line 75
------:      * @param g     at line 76
------:      * @param c     at line 77
------:      * @param x     at line 78
------:      * @param y     at line 79
------:      * @param radius     at line 80
comment:      */     at line 81
id: public     at line 82
id: static     at line 82
id: void     at line 82
id: drawEmptyCircle     at line 82
openPar: (     at line 82
id: Graphics     at line 82
id: g     at line 82
comma: ,     at line 82
id: Color     at line 82
id: c     at line 82
comma: ,     at line 82
rw_int: int     at line 82
id: x     at line 82
comma: ,     at line 82
rw_int: int     at line 82
id: y     at line 82
comma: ,     at line 82
rw_int: int     at line 82
id: radius     at line 82
closePar: )     at line 82
openCurlyBracket: {     at line 82
inlineComment: //Sets the color, and draws a circle (oval with equal radii)     at line 83
id: g     at line 84
dot: .     at line 84
id: setColor     at line 84
openPar: (     at line 84
id: c     at line 84
closePar: )     at line 84
semicolon: ;     at line 84
id: g     at line 85
dot: .     at line 85
id: drawOval     at line 85
openPar: (     at line 85
id: x     at line 85
minus: -     at line 85
id: radius     at line 85
comma: ,     at line 85
id: y     at line 85
minus: -     at line 85
id: radius     at line 85
comma: ,     at line 85
id: radius     at line 85
star: *     at line 85
num_integer: 2     at line 85
comma: ,     at line 85
id: radius     at line 85
star: *     at line 85
num_integer: 2     at line 85
closePar: )     at line 85
semicolon: ;     at line 85
closeCurlyBracket: }     at line 86
------: /**     at line 88
------:      *     at line 89
------:      * @param g     at line 90
------:      * @param c     at line 91
------:      * @param x     at line 92
------:      * @param y     at line 93
------:      * @param radius     at line 94
comment:      */     at line 95
id: public     at line 96
id: static     at line 96
id: void     at line 96
id: drawFilledCircle     at line 96
openPar: (     at line 96
id: Graphics     at line 96
id: g     at line 96
comma: ,     at line 96
id: Color     at line 96
id: c     at line 96
comma: ,     at line 96
rw_int: int     at line 96
id: x     at line 96
comma: ,     at line 96
rw_int: int     at line 96
id: y     at line 96
comma: ,     at line 96
rw_int: int     at line 96
id: radius     at line 96
closePar: )     at line 96
openCurlyBracket: {     at line 96
inlineComment: //sets the color, and draws a filled circle (oval with radii equal)     at line 97
id: g     at line 98
dot: .     at line 98
id: setColor     at line 98
openPar: (     at line 98
id: c     at line 98
closePar: )     at line 98
semicolon: ;     at line 98
id: g     at line 99
dot: .     at line 99
id: drawOval     at line 99
openPar: (     at line 99
id: x     at line 99
minus: -     at line 99
id: radius     at line 99
comma: ,     at line 99
id: y     at line 99
minus: -     at line 99
id: radius     at line 99
comma: ,     at line 99
id: radius     at line 99
star: *     at line 99
num_integer: 2     at line 99
comma: ,     at line 99
id: radius     at line 99
star: *     at line 99
num_integer: 2     at line 99
closePar: )     at line 99
semicolon: ;     at line 99
id: g     at line 100
dot: .     at line 100
id: fillOval     at line 100
openPar: (     at line 100
id: x     at line 100
minus: -     at line 100
id: radius     at line 100
comma: ,     at line 100
id: y     at line 100
minus: -     at line 100
id: radius     at line 100
comma: ,     at line 100
id: radius     at line 100
star: *     at line 100
num_integer: 2     at line 100
comma: ,     at line 100
id: radius     at line 100
star: *     at line 100
num_integer: 2     at line 100
closePar: )     at line 100
semicolon: ;     at line 100
closeCurlyBracket: }     at line 101
------: /**     at line 103
------:      *     at line 104
------:      * @param g     at line 105
------:      * @param c     at line 106
------:      * @param x     at line 107
------:      * @param y     at line 108
------:      * @param width     at line 109
------:      * @param height     at line 110
comment:      */     at line 111
id: public     at line 112
id: static     at line 112
id: void     at line 112
id: drawFilledQuad     at line 112
openPar: (     at line 112
id: Graphics     at line 112
id: g     at line 112
comma: ,     at line 112
id: Color     at line 112
id: c     at line 112
comma: ,     at line 112
rw_int: int     at line 112
id: x     at line 112
comma: ,     at line 112
rw_int: int     at line 112
id: y     at line 112
comma: ,     at line 112
rw_int: int     at line 112
id: width     at line 112
comma: ,     at line 112
rw_int: int     at line 112
id: height     at line 112
closePar: )     at line 112
openCurlyBracket: {     at line 113
inlineComment: //sets the color and draws the rectangle     at line 114
id: g     at line 115
dot: .     at line 115
id: setColor     at line 115
openPar: (     at line 115
id: c     at line 115
closePar: )     at line 115
semicolon: ;     at line 115
id: g     at line 116
dot: .     at line 116
id: drawRect     at line 116
openPar: (     at line 116
id: x     at line 116
comma: ,     at line 116
id: y     at line 116
comma: ,     at line 116
id: width     at line 116
comma: ,     at line 116
id: height     at line 116
closePar: )     at line 116
semicolon: ;     at line 116
id: g     at line 117
dot: .     at line 117
id: fillRect     at line 117
openPar: (     at line 117
id: x     at line 117
comma: ,     at line 117
id: y     at line 117
comma: ,     at line 117
id: width     at line 117
comma: ,     at line 117
id: height     at line 117
closePar: )     at line 117
semicolon: ;     at line 117
closeCurlyBracket: }     at line 118
------: /**     at line 120
------:      *     at line 121
------:      * @param g     at line 122
------:      * @param c     at line 123
------:      * @param x     at line 124
------:      * @param y     at line 125
------:      * @param width     at line 126
------:      * @param height     at line 127
comment:      */     at line 128
id: public     at line 129
id: static     at line 129
id: void     at line 129
id: drawEmptyQuad     at line 129
openPar: (     at line 129
id: Graphics     at line 129
id: g     at line 129
comma: ,     at line 129
id: Color     at line 129
id: c     at line 129
comma: ,     at line 129
rw_int: int     at line 129
id: x     at line 129
comma: ,     at line 129
rw_int: int     at line 129
id: y     at line 129
comma: ,     at line 129
rw_int: int     at line 129
id: width     at line 129
comma: ,     at line 129
rw_int: int     at line 129
id: height     at line 129
closePar: )     at line 129
openCurlyBracket: {     at line 129
inlineComment: //sets the color and draws the empty rectangle     at line 130
id: g     at line 131
dot: .     at line 131
id: setColor     at line 131
openPar: (     at line 131
id: c     at line 131
closePar: )     at line 131
semicolon: ;     at line 131
id: g     at line 132
dot: .     at line 132
id: drawRect     at line 132
openPar: (     at line 132
id: x     at line 132
comma: ,     at line 132
id: y     at line 132
comma: ,     at line 132
id: width     at line 132
comma: ,     at line 132
id: height     at line 132
closePar: )     at line 132
semicolon: ;     at line 132
closeCurlyBracket: }     at line 133
------: /**     at line 135
------:      * Draws the map in the background. All the other objects are drawn over it.     at line 136
------:      * @param tdMap     at line 137
------:      * @param g     at line 138
comment:      */     at line 139
id: public     at line 140
id: static     at line 140
id: void     at line 140
id: drawMap     at line 140
openPar: (     at line 140
id: TDMap     at line 140
id: tdMap     at line 140
comma: ,     at line 140
id: Graphics     at line 140
id: g     at line 140
closePar: )     at line 140
openCurlyBracket: {     at line 141
inlineComment: //draws the map     at line 142
inlineComment: //gets the width and the height     at line 143
rw_int: int     at line 144
id: mapWidth     at line 144
assign: =     at line 144
id: tdMap     at line 144
dot: .     at line 144
id: getGridWidth     at line 144
openPar: (     at line 144
closePar: )     at line 144
semicolon: ;     at line 144
rw_int: int     at line 145
id: mapHeight     at line 145
assign: =     at line 145
id: tdMap     at line 145
dot: .     at line 145
id: getGridHeight     at line 145
openPar: (     at line 145
closePar: )     at line 145
semicolon: ;     at line 145
inlineComment: //finds the width and height of each block     at line 146
rw_int: int     at line 147
id: scaledWidth     at line 147
assign: =     at line 147
openPar: (     at line 147
rw_int: int     at line 147
closePar: )     at line 147
id: PIXELWIDTH     at line 147
slash: /     at line 147
id: mapWidth     at line 147
semicolon: ;     at line 147
rw_int: int     at line 148
id: scaledHeight     at line 148
assign: =     at line 148
openPar: (     at line 148
rw_int: int     at line 148
closePar: )     at line 148
openPar: (     at line 148
id: GAMEPIXELHEIGHT     at line 148
closePar: )     at line 148
slash: /     at line 148
id: mapHeight     at line 148
semicolon: ;     at line 148
inlineComment: //sets the thickness of the line to 1.     at line 149
id: Graphics2D     at line 150
id: g2d     at line 150
assign: =     at line 150
openPar: (     at line 150
id: Graphics2D     at line 150
closePar: )     at line 150
id: g     at line 150
semicolon: ;     at line 150
id: g2d     at line 151
dot: .     at line 151
id: setStroke     at line 151
openPar: (     at line 151
id: new     at line 151
id: BasicStroke     at line 151
openPar: (     at line 151
num_integer: 1     at line 151
closePar: )     at line 151
closePar: )     at line 151
semicolon: ;     at line 151
inlineComment: //goes through the map in a nested for loop     at line 152
rw_for: for     at line 153
openPar: (     at line 153
rw_int: int     at line 153
id: i     at line 153
assign: =     at line 153
num_integer: 0     at line 153
semicolon: ;     at line 153
id: i     at line 153
operator_lessThan: <     at line 153
id: mapWidth     at line 153
semicolon: ;     at line 153
id: i     at line 153
plus: +     at line 153
plus: +     at line 153
closePar: )     at line 153
openCurlyBracket: {     at line 154
rw_for: for     at line 155
openPar: (     at line 155
rw_int: int     at line 155
id: j     at line 155
assign: =     at line 155
num_integer: 0     at line 155
semicolon: ;     at line 155
id: j     at line 155
operator_lessThan: <     at line 155
id: mapHeight     at line 155
semicolon: ;     at line 155
id: j     at line 155
plus: +     at line 155
plus: +     at line 155
closePar: )     at line 155
openCurlyBracket: {     at line 156
rw_int: int     at line 157
id: tileType     at line 157
assign: =     at line 157
id: tdMap     at line 157
dot: .     at line 157
id: getType     at line 157
openPar: (     at line 157
id: i     at line 157
comma: ,     at line 157
id: j     at line 157
closePar: )     at line 157
semicolon: ;     at line 157
inlineComment: //if we have a path tile, draw it yellow     at line 159
rw_if: if     at line 160
openPar: (     at line 160
id: tileType     at line 160
operator_equal: ==     at line 160
id: TDMap     at line 160
dot: .     at line 160
id: PATH     at line 160
closePar: )     at line 160
openCurlyBracket: {     at line 160
id: drawFilledQuad     at line 161
openPar: (     at line 161
id: g     at line 161
comma: ,     at line 161
id: new     at line 161
id: Color     at line 161
openPar: (     at line 161
num_integer: 252     at line 161
comma: ,     at line 161
num_integer: 255     at line 161
comma: ,     at line 161
num_integer: 191     at line 161
closePar: )     at line 161
comma: ,     at line 161
id: i     at line 161
star: *     at line 161
id: scaledWidth     at line 161
comma: ,     at line 161
id: j     at line 161
star: *     at line 161
id: scaledHeight     at line 161
comma: ,     at line 161
id: scaledWidth     at line 161
comma: ,     at line 161
id: scaledHeight     at line 161
closePar: )     at line 161
semicolon: ;     at line 161
id: drawEmptyQuad     at line 162
openPar: (     at line 162
id: g     at line 162
comma: ,     at line 162
id: new     at line 162
id: Color     at line 162
openPar: (     at line 162
num_integer: 252     at line 162
comma: ,     at line 162
num_integer: 255     at line 162
comma: ,     at line 162
num_integer: 191     at line 162
closePar: )     at line 162
comma: ,     at line 162
id: i     at line 162
star: *     at line 162
id: scaledWidth     at line 162
comma: ,     at line 162
id: j     at line 162
star: *     at line 162
id: scaledHeight     at line 162
comma: ,     at line 162
id: scaledWidth     at line 162
comma: ,     at line 162
id: scaledHeight     at line 162
closePar: )     at line 162
semicolon: ;     at line 162
inlineComment: //if we have a scenery tile, draw it green.     at line 163
closeCurlyBracket: }     at line 164
rw_else: else     at line 164
openCurlyBracket: {     at line 164
id: drawFilledQuad     at line 165
openPar: (     at line 165
id: g     at line 165
comma: ,     at line 165
id: new     at line 165
id: Color     at line 165
openPar: (     at line 165
num_integer: 122     at line 165
comma: ,     at line 165
num_integer: 196     at line 165
comma: ,     at line 165
num_integer: 83     at line 165
closePar: )     at line 165
comma: ,     at line 165
id: i     at line 165
star: *     at line 165
id: scaledWidth     at line 165
comma: ,     at line 165
id: j     at line 165
star: *     at line 165
id: scaledHeight     at line 165
comma: ,     at line 165
id: scaledWidth     at line 165
comma: ,     at line 165
id: scaledHeight     at line 165
closePar: )     at line 165
semicolon: ;     at line 165
id: drawEmptyQuad     at line 166
openPar: (     at line 166
id: g     at line 166
comma: ,     at line 166
id: Color     at line 166
dot: .     at line 166
id: LIGHT     at line 166
underline: _     at line 166
id: GRAY     at line 166
comma: ,     at line 166
id: i     at line 166
star: *     at line 166
id: scaledWidth     at line 166
comma: ,     at line 166
id: j     at line 166
star: *     at line 166
id: scaledHeight     at line 166
comma: ,     at line 166
id: scaledWidth     at line 166
comma: ,     at line 166
id: scaledHeight     at line 166
closePar: )     at line 166
semicolon: ;     at line 166
closeCurlyBracket: }     at line 167
closeCurlyBracket: }     at line 168
closeCurlyBracket: }     at line 169
closeCurlyBracket: }     at line 170
------: /**     at line 174
------:      *  Draws a Tower, and indicates its current level by Squares inside of it.     at line 175
------:      * @param tow     at line 176
------:      * @param g     at line 177
comment:      */     at line 178
id: public     at line 180
id: static     at line 180
id: void     at line 180
id: drawTower     at line 180
openPar: (     at line 180
id: Tower     at line 180
id: tow     at line 180
comma: ,     at line 180
id: Graphics     at line 180
id: g     at line 180
closePar: )     at line 180
openCurlyBracket: {     at line 180
inlineComment: //sets our stroke to be size 1.     at line 181
id: Graphics2D     at line 182
id: g2d     at line 182
assign: =     at line 182
openPar: (     at line 182
id: Graphics2D     at line 182
closePar: )     at line 182
id: g     at line 182
semicolon: ;     at line 182
id: g2d     at line 183
dot: .     at line 183
id: setStroke     at line 183
openPar: (     at line 183
id: new     at line 183
id: BasicStroke     at line 183
openPar: (     at line 183
num_integer: 1     at line 183
closePar: )     at line 183
closePar: )     at line 183
semicolon: ;     at line 183
inlineComment: //gets the tile width and height of the gamemap     at line 184
rw_int: int     at line 185
id: tileWidth     at line 185
assign: =     at line 185
id: PIXELWIDTH     at line 185
slash: /     at line 185
id: Artist     at line 185
underline: _     at line 185
id: Swing     at line 185
dot: .     at line 185
id: getInstance     at line 185
openPar: (     at line 185
closePar: )     at line 185
dot: .     at line 185
id: gridWidth     at line 185
semicolon: ;     at line 185
rw_int: int     at line 186
id: tileHeight     at line 186
assign: =     at line 186
openPar: (     at line 186
id: GAMEPIXELHEIGHT     at line 186
closePar: )     at line 186
slash: /     at line 186
id: Artist     at line 186
underline: _     at line 186
id: Swing     at line 186
dot: .     at line 186
id: getInstance     at line 186
openPar: (     at line 186
closePar: )     at line 186
dot: .     at line 186
id: gridHeight     at line 186
semicolon: ;     at line 186
inlineComment: //our outline tower is either black or blue (blue if selected)     at line 187
id: Color     at line 188
id: outlineColor     at line 188
semicolon: ;     at line 188
rw_if: if     at line 189
openPar: (     at line 189
id: tow     at line 189
dot: .     at line 189
id: isSelected     at line 189
openPar: (     at line 189
closePar: )     at line 189
closePar: )     at line 189
openCurlyBracket: {     at line 189
id: outlineColor     at line 190
assign: =     at line 190
id: Color     at line 190
dot: .     at line 190
id: blue     at line 190
semicolon: ;     at line 190
closeCurlyBracket: }     at line 191
rw_else: else     at line 191
openCurlyBracket: {     at line 191
id: outlineColor     at line 192
assign: =     at line 192
id: Color     at line 192
dot: .     at line 192
id: black     at line 192
semicolon: ;     at line 192
closeCurlyBracket: }     at line 193
inlineComment: //we draw the tower's rectangular part,     at line 194
id: drawFilledQuad     at line 195
openPar: (     at line 195
id: g     at line 195
comma: ,     at line 195
id: Color     at line 195
dot: .     at line 195
id: gray     at line 195
comma: ,     at line 195
id: tow     at line 195
dot: .     at line 195
id: getPosX     at line 195
openPar: (     at line 195
closePar: )     at line 195
comma: ,     at line 195
id: tow     at line 195
dot: .     at line 195
id: getPosY     at line 195
openPar: (     at line 195
closePar: )     at line 195
comma: ,     at line 195
id: tileWidth     at line 195
comma: ,     at line 195
id: tileHeight     at line 195
closePar: )     at line 195
semicolon: ;     at line 195
inlineComment: //and the outline     at line 196
id: drawEmptyQuad     at line 197
openPar: (     at line 197
id: g     at line 197
comma: ,     at line 197
id: outlineColor     at line 197
comma: ,     at line 197
id: tow     at line 197
dot: .     at line 197
id: getPosX     at line 197
openPar: (     at line 197
closePar: )     at line 197
comma: ,     at line 197
id: tow     at line 197
dot: .     at line 197
id: getPosY     at line 197
openPar: (     at line 197
closePar: )     at line 197
comma: ,     at line 197
id: tileWidth     at line 197
comma: ,     at line 197
id: tileHeight     at line 197
closePar: )     at line 197
semicolon: ;     at line 197
inlineComment: //and then we draw the tower's circular part     at line 198
id: drawFilledCircle     at line 199
openPar: (     at line 199
id: g     at line 199
comma: ,     at line 199
id: tow     at line 199
dot: .     at line 199
id: getColor     at line 199
openPar: (     at line 199
closePar: )     at line 199
comma: ,     at line 199
id: tow     at line 199
dot: .     at line 199
id: getPosX     at line 199
openPar: (     at line 199
closePar: )     at line 199
plus: +     at line 199
id: tileWidth     at line 199
slash: /     at line 199
num_integer: 2     at line 199
comma: ,     at line 199
id: tow     at line 199
dot: .     at line 199
id: getPosY     at line 199
openPar: (     at line 199
closePar: )     at line 199
plus: +     at line 199
id: tileHeight     at line 199
slash: /     at line 199
num_integer: 2     at line 199
comma: ,     at line 199
id: tileWidth     at line 199
slash: /     at line 199
num_integer: 4     at line 199
closePar: )     at line 199
semicolon: ;     at line 199
inlineComment: //for upgrades, we draw a circle (in white) around the main circle of the tower for each upgrade level!     at line 201
rw_int: int     at line 202
id: spaceBetweenCircles     at line 202
assign: =     at line 202
openPar: (     at line 202
rw_int: int     at line 202
closePar: )     at line 202
openPar: (     at line 202
openPar: (     at line 202
openPar: (     at line 202
id: double     at line 202
closePar: )     at line 202
id: tileWidth     at line 202
closePar: )     at line 202
slash: /     at line 202
num_integer: 16     at line 202
closePar: )     at line 202
semicolon: ;     at line 202
inlineComment: //16 since max tower level is 4. (so the circle doesn't go out of bounds)     at line 202
rw_for: for     at line 203
openPar: (     at line 203
rw_int: int     at line 203
id: i     at line 203
assign: =     at line 203
num_integer: 1     at line 203
semicolon: ;     at line 203
id: i     at line 203
operator_lessThan: <     at line 203
id: tow     at line 203
dot: .     at line 203
id: getLevel     at line 203
openPar: (     at line 203
closePar: )     at line 203
semicolon: ;     at line 203
id: i     at line 203
plus: +     at line 203
plus: +     at line 203
closePar: )     at line 203
openCurlyBracket: {     at line 203
id: drawEmptyCircle     at line 204
openPar: (     at line 204
id: g     at line 204
comma: ,     at line 204
id: Color     at line 204
dot: .     at line 204
id: white     at line 204
comma: ,     at line 204
id: tow     at line 204
dot: .     at line 204
id: getPosX     at line 204
openPar: (     at line 204
closePar: )     at line 204
plus: +     at line 204
id: tileWidth     at line 204
slash: /     at line 204
num_integer: 2     at line 204
comma: ,     at line 204
id: tow     at line 204
dot: .     at line 204
id: getPosY     at line 204
openPar: (     at line 204
closePar: )     at line 204
plus: +     at line 204
id: tileHeight     at line 204
slash: /     at line 204
num_integer: 2     at line 204
comma: ,     at line 204
id: tileWidth     at line 204
slash: /     at line 204
num_integer: 4     at line 204
plus: +     at line 204
id: i     at line 204
star: *     at line 204
id: spaceBetweenCircles     at line 204
closePar: )     at line 204
semicolon: ;     at line 204
closeCurlyBracket: }     at line 205
closeCurlyBracket: }     at line 206
closeCurlyBracket: }     at line 213
